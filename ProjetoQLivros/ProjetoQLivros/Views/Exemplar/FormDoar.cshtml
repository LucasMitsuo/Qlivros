@model DoacaoViewModel
@{
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";
}

@using (Ajax.BeginForm("DadosReceptor", "Doacao", FormMethod.Post, new AjaxOptions() { UpdateTargetId = "qlivros-modal-content", OnSuccess = "QLivrosModal", InsertionMode = InsertionMode.Replace, HttpMethod = "GET" }, new { @class = "" }))
{
   @Html.Hidden("idDoador", Model.idDoador)

    <h1>Doe um exemplar</h1>
    <h4 class="text-left content-brief">Selecione o exemplar que você deseja doar e os dados respectivos do receptor para que a solicitação de doação seja enviada.</h4>
    <section class="donate">
        <form class="text-center">
            @if (Model.Mensagem != null)
            {
                <div class="alert alert-danger" role="alert">
                    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                    <span class="sr-only">Error:</span>
                    @Model.Mensagem
                </div>
            }
            <div class="form-group">
                @Html.DropDownList("idExemplar", Model.OpcoesExemplares, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.TextBox("email", null, null, new { @class = "form-control", placeholder = "Entre com o email do receptor", type = "email", required = "required", oninvalid = "this.setCustomValidity('Entre com o Email do Receptor')", oninput = "setCustomValidity('')" })
            </div>
            <div class="form-group">
                @Html.TextBox("login", null, null, new { @class = "form-control", placeholder = "Entre com o login do receptor", type = "text", required = "required", oninvalid = "this.setCustomValidity('Entre com o login do receptor')", oninput = "setCustomValidity('')" })
            </div>
            <button type="submit" class="btn btn-blue">Doar exemplar</button>
        </form>
    </section>
}